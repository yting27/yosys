/* Generated by Yosys 0.52+137 (git sha1 aa30589c1, g++ 13.3.0-6ubuntu2~24.04 -fPIC -O3) */
module jFIFO(DATAOUT, full, empty, clock, reset, wn, rn, DATAIN);
  wire [2:0] _000_;
  wire [7:0] _001_;
  wire [7:0] _002_;
  wire [2:0] _003_;
  wire [7:0] _004_;
  wire [7:0] _005_;
  wire [7:0] _006_;
  wire _007_;
  wire [31:0] _008_;
  wire [31:0] _009_;
  wire [31:0] _010_;
  wire [31:0] _011_;
  wire [31:0] _012_;
  wire [31:0] _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire [7:0] _057_;
  wire [7:0] _058_;
  wire [7:0] _059_;
  wire [7:0] _060_;
  wire [7:0] _061_;
  wire [7:0] _062_;
  wire [7:0] _063_;
  wire [7:0] _064_;
  wire [7:0] _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire [2:0] _078_;
  wire [2:0] _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire [7:0] _092_;
  wire [7:0] _093_;
  wire [7:0] _094_;
  wire [7:0] _095_;
  wire [7:0] _096_;
  wire [7:0] _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire [7:0] _106_;
  wire [7:0] _107_;
  wire [7:0] _108_;
  wire [7:0] _109_;
  wire [7:0] _110_;
  wire [7:0] _111_;
  wire [7:0] _112_;
  wire [7:0] _113_;
  wire [7:0] _114_;
  input [7:0] DATAIN;
  wire [7:0] DATAIN;
  output [7:0] DATAOUT;
  reg [7:0] DATAOUT;
  input clock;
  wire clock;
  output empty;
  wire empty;
  output full;
  wire full;
  reg [7:0] \memory[0] ;
  reg [7:0] \memory[1] ;
  reg [7:0] \memory[2] ;
  reg [7:0] \memory[3] ;
  reg [7:0] \memory[4] ;
  reg [7:0] \memory[5] ;
  reg [7:0] \memory[6] ;
  reg [7:0] \memory[7] ;
  input reset;
  wire reset;
  input rn;
  wire rn;
  reg [2:0] rptr;
  input wn;
  wire wn;
  reg [2:0] wptr;
  always @(posedge clock)
    if (_014_) \memory[7] [0] <= _114_[0];
  always @(posedge clock)
    if (_014_) \memory[7] [1] <= _114_[1];
  always @(posedge clock)
    if (_014_) \memory[7] [2] <= _114_[2];
  always @(posedge clock)
    if (_014_) \memory[7] [3] <= _114_[3];
  always @(posedge clock)
    if (_014_) \memory[7] [4] <= _114_[4];
  always @(posedge clock)
    if (_014_) \memory[7] [5] <= _114_[5];
  always @(posedge clock)
    if (_014_) \memory[7] [6] <= _114_[6];
  always @(posedge clock)
    if (_014_) \memory[7] [7] <= _114_[7];
  always @(posedge clock)
    if (reset) DATAOUT[0] <= 1'h0;
    else if (_022_) DATAOUT[0] <= _065_[0];
  always @(posedge clock)
    if (reset) DATAOUT[1] <= 1'h0;
    else if (_022_) DATAOUT[1] <= _065_[1];
  always @(posedge clock)
    if (reset) DATAOUT[2] <= 1'h0;
    else if (_022_) DATAOUT[2] <= _065_[2];
  always @(posedge clock)
    if (reset) DATAOUT[3] <= 1'h0;
    else if (_022_) DATAOUT[3] <= _065_[3];
  always @(posedge clock)
    if (reset) DATAOUT[4] <= 1'h0;
    else if (_022_) DATAOUT[4] <= _065_[4];
  always @(posedge clock)
    if (reset) DATAOUT[5] <= 1'h0;
    else if (_022_) DATAOUT[5] <= _065_[5];
  always @(posedge clock)
    if (reset) DATAOUT[6] <= 1'h0;
    else if (_022_) DATAOUT[6] <= _065_[6];
  always @(posedge clock)
    if (reset) DATAOUT[7] <= 1'h0;
    else if (_022_) DATAOUT[7] <= _065_[7];
  always @(posedge clock)
    if (_016_) \memory[5] [0] <= _112_[0];
  always @(posedge clock)
    if (_016_) \memory[5] [1] <= _112_[1];
  always @(posedge clock)
    if (_016_) \memory[5] [2] <= _112_[2];
  always @(posedge clock)
    if (_016_) \memory[5] [3] <= _112_[3];
  always @(posedge clock)
    if (_016_) \memory[5] [4] <= _112_[4];
  always @(posedge clock)
    if (_016_) \memory[5] [5] <= _112_[5];
  always @(posedge clock)
    if (_016_) \memory[5] [6] <= _112_[6];
  always @(posedge clock)
    if (_016_) \memory[5] [7] <= _112_[7];
  always @(posedge clock)
    if (_015_) \memory[6] [0] <= _113_[0];
  always @(posedge clock)
    if (_015_) \memory[6] [1] <= _113_[1];
  always @(posedge clock)
    if (_015_) \memory[6] [2] <= _113_[2];
  always @(posedge clock)
    if (_015_) \memory[6] [3] <= _113_[3];
  always @(posedge clock)
    if (_015_) \memory[6] [4] <= _113_[4];
  always @(posedge clock)
    if (_015_) \memory[6] [5] <= _113_[5];
  always @(posedge clock)
    if (_015_) \memory[6] [6] <= _113_[6];
  always @(posedge clock)
    if (_015_) \memory[6] [7] <= _113_[7];
  always @(posedge clock)
    if (_018_) \memory[3] [0] <= _110_[0];
  always @(posedge clock)
    if (_018_) \memory[3] [1] <= _110_[1];
  always @(posedge clock)
    if (_018_) \memory[3] [2] <= _110_[2];
  always @(posedge clock)
    if (_018_) \memory[3] [3] <= _110_[3];
  always @(posedge clock)
    if (_018_) \memory[3] [4] <= _110_[4];
  always @(posedge clock)
    if (_018_) \memory[3] [5] <= _110_[5];
  always @(posedge clock)
    if (_018_) \memory[3] [6] <= _110_[6];
  always @(posedge clock)
    if (_018_) \memory[3] [7] <= _110_[7];
  always @(posedge clock)
    if (_017_) \memory[4] [0] <= _111_[0];
  always @(posedge clock)
    if (_017_) \memory[4] [1] <= _111_[1];
  always @(posedge clock)
    if (_017_) \memory[4] [2] <= _111_[2];
  always @(posedge clock)
    if (_017_) \memory[4] [3] <= _111_[3];
  always @(posedge clock)
    if (_017_) \memory[4] [4] <= _111_[4];
  always @(posedge clock)
    if (_017_) \memory[4] [5] <= _111_[5];
  always @(posedge clock)
    if (_017_) \memory[4] [6] <= _111_[6];
  always @(posedge clock)
    if (_017_) \memory[4] [7] <= _111_[7];
  always @(posedge clock)
    if (reset) wptr[0] <= 1'h0;
    else if (_005_[7]) wptr[0] <= _009_[0];
  always @(posedge clock)
    if (reset) wptr[1] <= 1'h0;
    else if (_005_[7]) wptr[1] <= _010_[1];
  always @(posedge clock)
    if (reset) wptr[2] <= 1'h0;
    else if (_005_[7]) wptr[2] <= _010_[2];
  always @(posedge clock)
    if (reset) rptr[0] <= 1'h0;
    else if (_022_) rptr[0] <= _012_[0];
  always @(posedge clock)
    if (reset) rptr[1] <= 1'h0;
    else if (_022_) rptr[1] <= _013_[1];
  always @(posedge clock)
    if (reset) rptr[2] <= 1'h0;
    else if (_022_) rptr[2] <= _013_[2];
  always @(posedge clock)
    if (_019_) \memory[2] [0] <= _109_[0];
  always @(posedge clock)
    if (_019_) \memory[2] [1] <= _109_[1];
  always @(posedge clock)
    if (_019_) \memory[2] [2] <= _109_[2];
  always @(posedge clock)
    if (_019_) \memory[2] [3] <= _109_[3];
  always @(posedge clock)
    if (_019_) \memory[2] [4] <= _109_[4];
  always @(posedge clock)
    if (_019_) \memory[2] [5] <= _109_[5];
  always @(posedge clock)
    if (_019_) \memory[2] [6] <= _109_[6];
  always @(posedge clock)
    if (_019_) \memory[2] [7] <= _109_[7];
  always @(posedge clock)
    if (_020_) \memory[1] [0] <= _108_[0];
  always @(posedge clock)
    if (_020_) \memory[1] [1] <= _108_[1];
  always @(posedge clock)
    if (_020_) \memory[1] [2] <= _108_[2];
  always @(posedge clock)
    if (_020_) \memory[1] [3] <= _108_[3];
  always @(posedge clock)
    if (_020_) \memory[1] [4] <= _108_[4];
  always @(posedge clock)
    if (_020_) \memory[1] [5] <= _108_[5];
  always @(posedge clock)
    if (_020_) \memory[1] [6] <= _108_[6];
  always @(posedge clock)
    if (_020_) \memory[1] [7] <= _108_[7];
  always @(posedge clock)
    if (_021_) \memory[0] [0] <= _107_[0];
  always @(posedge clock)
    if (_021_) \memory[0] [1] <= _107_[1];
  always @(posedge clock)
    if (_021_) \memory[0] [2] <= _107_[2];
  always @(posedge clock)
    if (_021_) \memory[0] [3] <= _107_[3];
  always @(posedge clock)
    if (_021_) \memory[0] [4] <= _107_[4];
  always @(posedge clock)
    if (_021_) \memory[0] [5] <= _107_[5];
  always @(posedge clock)
    if (_021_) \memory[0] [6] <= _107_[6];
  always @(posedge clock)
    if (_021_) \memory[0] [7] <= _107_[7];
  assign _066_ = ~wptr[2];
  assign _067_ = ~wptr[1];
  assign _068_ = ~rptr[2];
  assign _069_ = ~rptr[1];
  assign _012_[0] = ~rptr[0];
  assign _009_[0] = ~wptr[0];
  assign _021_ = reset |  _098_;
  assign _020_ = reset |  _099_;
  assign _019_ = reset |  _100_;
  assign _018_ = reset |  _101_;
  assign _017_ = reset |  _102_;
  assign _016_ = reset |  _103_;
  assign _015_ = reset |  _104_;
  assign _014_ = reset |  _105_;
  assign _080_ = _070_ |  _068_;
  assign _071_ = _009_[0] |  _067_;
  assign _081_ = _071_ |  _066_;
  assign _072_ = _078_[0] |  _078_[1];
  assign _082_ = _072_ |  _078_[2];
  assign _073_ = _079_[0] |  _079_[1];
  assign _083_ = _073_ |  _079_[2];
  assign _084_ = _074_ |  _068_;
  assign _085_ = _075_ |  _068_;
  assign _086_ = _076_ |  _068_;
  assign _074_ = _012_[0] |  _069_;
  assign _087_ = _074_ |  rptr[2];
  assign _070_ = rptr[0] |  _069_;
  assign _088_ = _070_ |  rptr[2];
  assign _075_ = _012_[0] |  rptr[1];
  assign _089_ = _075_ |  rptr[2];
  assign _022_ = _007_ &  _023_;
  assign _076_ = rptr[0] |  rptr[1];
  assign _077_ = _076_ |  rptr[2];
  assign _052_ = ~ _080_;
  assign _090_ = ~ _081_;
  assign _054_ = ~ _083_;
  assign _053_ = ~ _084_;
  assign _091_ = ~ full;
  assign _051_ = ~ _085_;
  assign _050_ = ~ _086_;
  assign _049_ = ~ _087_;
  assign _048_ = ~ _088_;
  assign _047_ = ~ _089_;
  assign _046_ = ~ _077_;
  assign _110_[0] = _101_ ?  _001_[0] : _106_[7];
  assign _110_[1] = _101_ ?  _001_[1] : _106_[7];
  assign _110_[2] = _101_ ?  _001_[2] : _106_[7];
  assign _110_[3] = _101_ ?  _001_[3] : _106_[7];
  assign _110_[4] = _101_ ?  _001_[4] : _106_[7];
  assign _110_[5] = _101_ ?  _001_[5] : _106_[7];
  assign _110_[6] = _101_ ?  _001_[6] : _106_[7];
  assign _110_[7] = _101_ ?  _001_[7] : _106_[7];
  assign _111_[0] = _102_ ?  _001_[0] : _106_[7];
  assign _111_[1] = _102_ ?  _001_[1] : _106_[7];
  assign _111_[2] = _102_ ?  _001_[2] : _106_[7];
  assign _111_[3] = _102_ ?  _001_[3] : _106_[7];
  assign _111_[4] = _102_ ?  _001_[4] : _106_[7];
  assign _111_[5] = _102_ ?  _001_[5] : _106_[7];
  assign _111_[6] = _102_ ?  _001_[6] : _106_[7];
  assign _111_[7] = _102_ ?  _001_[7] : _106_[7];
  assign _112_[0] = _103_ ?  _001_[0] : _106_[7];
  assign _112_[1] = _103_ ?  _001_[1] : _106_[7];
  assign _112_[2] = _103_ ?  _001_[2] : _106_[7];
  assign _112_[3] = _103_ ?  _001_[3] : _106_[7];
  assign _112_[4] = _103_ ?  _001_[4] : _106_[7];
  assign _112_[5] = _103_ ?  _001_[5] : _106_[7];
  assign _112_[6] = _103_ ?  _001_[6] : _106_[7];
  assign _112_[7] = _103_ ?  _001_[7] : _106_[7];
  assign _113_[0] = _104_ ?  _001_[0] : _106_[7];
  assign _113_[1] = _104_ ?  _001_[1] : _106_[7];
  assign _113_[2] = _104_ ?  _001_[2] : _106_[7];
  assign _113_[3] = _104_ ?  _001_[3] : _106_[7];
  assign _113_[4] = _104_ ?  _001_[4] : _106_[7];
  assign _113_[5] = _104_ ?  _001_[5] : _106_[7];
  assign _113_[6] = _104_ ?  _001_[6] : _106_[7];
  assign _113_[7] = _104_ ?  _001_[7] : _106_[7];
  assign _114_[0] = _105_ ?  _001_[0] : _106_[7];
  assign _114_[1] = _105_ ?  _001_[1] : _106_[7];
  assign _114_[2] = _105_ ?  _001_[2] : _106_[7];
  assign _114_[3] = _105_ ?  _001_[3] : _106_[7];
  assign _114_[4] = _105_ ?  _001_[4] : _106_[7];
  assign _114_[5] = _105_ ?  _001_[5] : _106_[7];
  assign _114_[6] = _105_ ?  _001_[6] : _106_[7];
  assign _114_[7] = _105_ ?  _001_[7] : _106_[7];
  assign _095_[0] = rptr[0] ?  \memory[3] [0] : \memory[2] [0];
  assign _095_[1] = rptr[0] ?  \memory[3] [1] : \memory[2] [1];
  assign _095_[2] = rptr[0] ?  \memory[3] [2] : \memory[2] [2];
  assign _095_[3] = rptr[0] ?  \memory[3] [3] : \memory[2] [3];
  assign _095_[4] = rptr[0] ?  \memory[3] [4] : \memory[2] [4];
  assign _095_[5] = rptr[0] ?  \memory[3] [5] : \memory[2] [5];
  assign _095_[6] = rptr[0] ?  \memory[3] [6] : \memory[2] [6];
  assign _095_[7] = rptr[0] ?  \memory[3] [7] : \memory[2] [7];
  assign _094_[0] = rptr[0] ?  \memory[1] [0] : \memory[0] [0];
  assign _094_[1] = rptr[0] ?  \memory[1] [1] : \memory[0] [1];
  assign _094_[2] = rptr[0] ?  \memory[1] [2] : \memory[0] [2];
  assign _094_[3] = rptr[0] ?  \memory[1] [3] : \memory[0] [3];
  assign _094_[4] = rptr[0] ?  \memory[1] [4] : \memory[0] [4];
  assign _094_[5] = rptr[0] ?  \memory[1] [5] : \memory[0] [5];
  assign _094_[6] = rptr[0] ?  \memory[1] [6] : \memory[0] [6];
  assign _094_[7] = rptr[0] ?  \memory[1] [7] : \memory[0] [7];
  assign _093_[0] = rptr[1] ?  _097_[0] : _096_[0];
  assign _093_[1] = rptr[1] ?  _097_[1] : _096_[1];
  assign _093_[2] = rptr[1] ?  _097_[2] : _096_[2];
  assign _093_[3] = rptr[1] ?  _097_[3] : _096_[3];
  assign _093_[4] = rptr[1] ?  _097_[4] : _096_[4];
  assign _093_[5] = rptr[1] ?  _097_[5] : _096_[5];
  assign _093_[6] = rptr[1] ?  _097_[6] : _096_[6];
  assign _093_[7] = rptr[1] ?  _097_[7] : _096_[7];
  assign _092_[0] = rptr[1] ?  _095_[0] : _094_[0];
  assign _092_[1] = rptr[1] ?  _095_[1] : _094_[1];
  assign _092_[2] = rptr[1] ?  _095_[2] : _094_[2];
  assign _092_[3] = rptr[1] ?  _095_[3] : _094_[3];
  assign _092_[4] = rptr[1] ?  _095_[4] : _094_[4];
  assign _092_[5] = rptr[1] ?  _095_[5] : _094_[5];
  assign _092_[6] = rptr[1] ?  _095_[6] : _094_[6];
  assign _092_[7] = rptr[1] ?  _095_[7] : _094_[7];
  assign empty = ~ _082_;
  assign _006_[0] = rptr[2] ?  _093_[0] : _092_[0];
  assign _006_[1] = rptr[2] ?  _093_[1] : _092_[1];
  assign _006_[2] = rptr[2] ?  _093_[2] : _092_[2];
  assign _006_[3] = rptr[2] ?  _093_[3] : _092_[3];
  assign _006_[4] = rptr[2] ?  _093_[4] : _092_[4];
  assign _006_[5] = rptr[2] ?  _093_[5] : _092_[5];
  assign _006_[6] = rptr[2] ?  _093_[6] : _092_[6];
  assign _006_[7] = rptr[2] ?  _093_[7] : _092_[7];
  assign _065_[0] = _032_ ?  1'hx : _064_[0];
  assign _065_[1] = _032_ ?  1'hx : _064_[1];
  assign _065_[2] = _032_ ?  1'hx : _064_[2];
  assign _065_[3] = _032_ ?  1'hx : _064_[3];
  assign _065_[4] = _032_ ?  1'hx : _064_[4];
  assign _065_[5] = _032_ ?  1'hx : _064_[5];
  assign _065_[6] = _032_ ?  1'hx : _064_[6];
  assign _065_[7] = _032_ ?  1'hx : _064_[7];
  assign _064_[0] = _031_ ?  1'hx : _063_[0];
  assign _064_[1] = _031_ ?  1'hx : _063_[1];
  assign _064_[2] = _031_ ?  1'hx : _063_[2];
  assign _064_[3] = _031_ ?  1'hx : _063_[3];
  assign _064_[4] = _031_ ?  1'hx : _063_[4];
  assign _064_[5] = _031_ ?  1'hx : _063_[5];
  assign _064_[6] = _031_ ?  1'hx : _063_[6];
  assign _064_[7] = _031_ ?  1'hx : _063_[7];
  assign _063_[0] = _030_ ?  1'hx : _062_[0];
  assign _063_[1] = _030_ ?  1'hx : _062_[1];
  assign _063_[2] = _030_ ?  1'hx : _062_[2];
  assign _063_[3] = _030_ ?  1'hx : _062_[3];
  assign _063_[4] = _030_ ?  1'hx : _062_[4];
  assign _063_[5] = _030_ ?  1'hx : _062_[5];
  assign _063_[6] = _030_ ?  1'hx : _062_[6];
  assign _063_[7] = _030_ ?  1'hx : _062_[7];
  assign _062_[0] = _029_ ?  1'hx : _061_[0];
  assign _062_[1] = _029_ ?  1'hx : _061_[1];
  assign _062_[2] = _029_ ?  1'hx : _061_[2];
  assign _062_[3] = _029_ ?  1'hx : _061_[3];
  assign _062_[4] = _029_ ?  1'hx : _061_[4];
  assign _062_[5] = _029_ ?  1'hx : _061_[5];
  assign _062_[6] = _029_ ?  1'hx : _061_[6];
  assign _062_[7] = _029_ ?  1'hx : _061_[7];
  assign _004_[0] = _005_[7] ?  DATAIN[0] : 1'hx;
  assign _004_[1] = _005_[7] ?  DATAIN[1] : 1'hx;
  assign _004_[2] = _005_[7] ?  DATAIN[2] : 1'hx;
  assign _004_[3] = _005_[7] ?  DATAIN[3] : 1'hx;
  assign _004_[4] = _005_[7] ?  DATAIN[4] : 1'hx;
  assign _004_[5] = _005_[7] ?  DATAIN[5] : 1'hx;
  assign _004_[6] = _005_[7] ?  DATAIN[6] : 1'hx;
  assign _004_[7] = _005_[7] ?  DATAIN[7] : 1'hx;
  assign _061_[0] = _028_ ?  1'hx : _060_[0];
  assign _061_[1] = _028_ ?  1'hx : _060_[1];
  assign _061_[2] = _028_ ?  1'hx : _060_[2];
  assign _061_[3] = _028_ ?  1'hx : _060_[3];
  assign _061_[4] = _028_ ?  1'hx : _060_[4];
  assign _061_[5] = _028_ ?  1'hx : _060_[5];
  assign _061_[6] = _028_ ?  1'hx : _060_[6];
  assign _061_[7] = _028_ ?  1'hx : _060_[7];
  assign _003_[0] = _005_[7] ?  wptr[0] : 1'hx;
  assign _003_[1] = _005_[7] ?  wptr[1] : 1'hx;
  assign _003_[2] = _005_[7] ?  wptr[2] : 1'hx;
  assign _060_[0] = _027_ ?  1'hx : _059_[0];
  assign _060_[1] = _027_ ?  1'hx : _059_[1];
  assign _060_[2] = _027_ ?  1'hx : _059_[2];
  assign _060_[3] = _027_ ?  1'hx : _059_[3];
  assign _060_[4] = _027_ ?  1'hx : _059_[4];
  assign _060_[5] = _027_ ?  1'hx : _059_[5];
  assign _060_[6] = _027_ ?  1'hx : _059_[6];
  assign _060_[7] = _027_ ?  1'hx : _059_[7];
  assign _059_[0] = _026_ ?  1'hx : _058_[0];
  assign _059_[1] = _026_ ?  1'hx : _058_[1];
  assign _059_[2] = _026_ ?  1'hx : _058_[2];
  assign _059_[3] = _026_ ?  1'hx : _058_[3];
  assign _059_[4] = _026_ ?  1'hx : _058_[4];
  assign _059_[5] = _026_ ?  1'hx : _058_[5];
  assign _059_[6] = _026_ ?  1'hx : _058_[6];
  assign _059_[7] = _026_ ?  1'hx : _058_[7];
  assign _058_[0] = _025_ ?  1'hx : _057_[0];
  assign _058_[1] = _025_ ?  1'hx : _057_[1];
  assign _058_[2] = _025_ ?  1'hx : _057_[2];
  assign _058_[3] = _025_ ?  1'hx : _057_[3];
  assign _058_[4] = _025_ ?  1'hx : _057_[4];
  assign _058_[5] = _025_ ?  1'hx : _057_[5];
  assign _058_[6] = _025_ ?  1'hx : _057_[6];
  assign _058_[7] = _025_ ?  1'hx : _057_[7];
  assign _002_[7] = reset ?  1'h0 : _005_[7];
  assign _001_[0] = reset ?  1'hx : _004_[0];
  assign _001_[1] = reset ?  1'hx : _004_[1];
  assign _001_[2] = reset ?  1'hx : _004_[2];
  assign _001_[3] = reset ?  1'hx : _004_[3];
  assign _001_[4] = reset ?  1'hx : _004_[4];
  assign _001_[5] = reset ?  1'hx : _004_[5];
  assign _001_[6] = reset ?  1'hx : _004_[6];
  assign _001_[7] = reset ?  1'hx : _004_[7];
  assign _057_[0] = _024_ ?  1'hx : _006_[0];
  assign _057_[1] = _024_ ?  1'hx : _006_[1];
  assign _057_[2] = _024_ ?  1'hx : _006_[2];
  assign _057_[3] = _024_ ?  1'hx : _006_[3];
  assign _057_[4] = _024_ ?  1'hx : _006_[4];
  assign _057_[5] = _024_ ?  1'hx : _006_[5];
  assign _057_[6] = _024_ ?  1'hx : _006_[6];
  assign _057_[7] = _024_ ?  1'hx : _006_[7];
  assign _000_[0] = reset ?  1'hx : _003_[0];
  assign _000_[1] = reset ?  1'hx : _003_[1];
  assign _000_[2] = reset ?  1'hx : _003_[2];
  assign _097_[0] = rptr[0] ?  \memory[7] [0] : \memory[6] [0];
  assign _097_[1] = rptr[0] ?  \memory[7] [1] : \memory[6] [1];
  assign _097_[2] = rptr[0] ?  \memory[7] [2] : \memory[6] [2];
  assign _097_[3] = rptr[0] ?  \memory[7] [3] : \memory[6] [3];
  assign _097_[4] = rptr[0] ?  \memory[7] [4] : \memory[6] [4];
  assign _097_[5] = rptr[0] ?  \memory[7] [5] : \memory[6] [5];
  assign _097_[6] = rptr[0] ?  \memory[7] [6] : \memory[6] [6];
  assign _097_[7] = rptr[0] ?  \memory[7] [7] : \memory[6] [7];
  assign _096_[0] = rptr[0] ?  \memory[5] [0] : \memory[4] [0];
  assign _096_[1] = rptr[0] ?  \memory[5] [1] : \memory[4] [1];
  assign _096_[2] = rptr[0] ?  \memory[5] [2] : \memory[4] [2];
  assign _096_[3] = rptr[0] ?  \memory[5] [3] : \memory[4] [3];
  assign _096_[4] = rptr[0] ?  \memory[5] [4] : \memory[4] [4];
  assign _096_[5] = rptr[0] ?  \memory[5] [5] : \memory[4] [5];
  assign _096_[6] = rptr[0] ?  \memory[5] [6] : \memory[4] [6];
  assign _096_[7] = rptr[0] ?  \memory[5] [7] : \memory[4] [7];
  assign _106_[7] = reset ?  1'h0 : 1'hx;
  assign _107_[0] = _098_ ?  _001_[0] : _106_[7];
  assign _107_[1] = _098_ ?  _001_[1] : _106_[7];
  assign _107_[2] = _098_ ?  _001_[2] : _106_[7];
  assign _107_[3] = _098_ ?  _001_[3] : _106_[7];
  assign _107_[4] = _098_ ?  _001_[4] : _106_[7];
  assign _107_[5] = _098_ ?  _001_[5] : _106_[7];
  assign _107_[6] = _098_ ?  _001_[6] : _106_[7];
  assign _107_[7] = _098_ ?  _001_[7] : _106_[7];
  assign _108_[0] = _099_ ?  _001_[0] : _106_[7];
  assign _108_[1] = _099_ ?  _001_[1] : _106_[7];
  assign _108_[2] = _099_ ?  _001_[2] : _106_[7];
  assign _108_[3] = _099_ ?  _001_[3] : _106_[7];
  assign _108_[4] = _099_ ?  _001_[4] : _106_[7];
  assign _108_[5] = _099_ ?  _001_[5] : _106_[7];
  assign _108_[6] = _099_ ?  _001_[6] : _106_[7];
  assign _108_[7] = _099_ ?  _001_[7] : _106_[7];
  assign _109_[0] = _100_ ?  _001_[0] : _106_[7];
  assign _109_[1] = _100_ ?  _001_[1] : _106_[7];
  assign _109_[2] = _100_ ?  _001_[2] : _106_[7];
  assign _109_[3] = _100_ ?  _001_[3] : _106_[7];
  assign _109_[4] = _100_ ?  _001_[4] : _106_[7];
  assign _109_[5] = _100_ ?  _001_[5] : _106_[7];
  assign _109_[6] = _100_ ?  _001_[6] : _106_[7];
  assign _109_[7] = _100_ ?  _001_[7] : _106_[7];
  assign _023_ = ~ _005_[7];
  assign _055_ = ~ _000_[0];
  assign _056_ = ~ _000_[1];
  assign _034_ = ~ _000_[2];
  assign _041_ = _040_ &  _034_;
  assign _101_ = _041_ &  _002_[7];
  assign _042_ = _033_ &  _000_[2];
  assign _102_ = _042_ &  _002_[7];
  assign _043_ = _036_ &  _000_[2];
  assign _103_ = _043_ &  _002_[7];
  assign _044_ = _038_ &  _000_[2];
  assign _104_ = _044_ &  _002_[7];
  assign _045_ = _040_ &  _000_[2];
  assign _105_ = _045_ &  _002_[7];
  assign _013_[1] = rptr[1] ^  rptr[0];
  assign _013_[2] = rptr[2] ^  _011_[1];
  assign _010_[1] = wptr[1] ^  wptr[0];
  assign _010_[2] = wptr[2] ^  _008_[1];
  assign _011_[1] = rptr[1] &  rptr[0];
  assign _008_[1] = wptr[1] &  wptr[0];
  assign full = _090_ &  _046_;
  assign _078_[0] = wptr[0] ^  rptr[0];
  assign _078_[1] = wptr[1] ^  rptr[1];
  assign _078_[2] = wptr[2] ^  rptr[2];
  assign _032_ = _002_[7] &  _054_;
  assign _079_[0] = rptr[0] ^  _000_[0];
  assign _079_[1] = rptr[1] ^  _000_[1];
  assign _079_[2] = rptr[2] ^  _000_[2];
  assign _031_ = reset &  _053_;
  assign _030_ = reset &  _052_;
  assign _005_[7] = wn &  _091_;
  assign _007_ = rn &  _082_;
  assign _029_ = reset &  _051_;
  assign _028_ = reset &  _050_;
  assign _027_ = reset &  _049_;
  assign _026_ = reset &  _048_;
  assign _025_ = reset &  _047_;
  assign _024_ = reset &  _046_;
  assign _033_ = _055_ &  _056_;
  assign _035_ = _033_ &  _034_;
  assign _098_ = _035_ &  _002_[7];
  assign _036_ = _000_[0] &  _056_;
  assign _037_ = _036_ &  _034_;
  assign _099_ = _037_ &  _002_[7];
  assign _038_ = _055_ &  _000_[1];
  assign _039_ = _038_ &  _034_;
  assign _100_ = _039_ &  _002_[7];
  assign _040_ = _000_[0] &  _000_[1];
  assign _002_[6:0] = { _002_[7], _002_[7], _002_[7], _002_[7], _002_[7], _002_[7], _002_[7] };
  assign _005_[6:0] = { _005_[7], _005_[7], _005_[7], _005_[7], _005_[7], _005_[7], _005_[7] };
  assign { _008_[31:3], _008_[0] } = { 29'h00000000, wptr[0] };
  assign _009_[31:1] = { 29'h00000000, wptr[2:1] };
  assign { _010_[31:3], _010_[0] } = { 28'h0000000, _008_[2], _009_[0] };
  assign { _011_[31:3], _011_[0] } = { 29'h00000000, rptr[0] };
  assign _012_[31:1] = { 29'h00000000, rptr[2:1] };
  assign { _013_[31:3], _013_[0] } = { 28'h0000000, _011_[2], _012_[0] };
  assign _106_[6:0] = { _106_[7], _106_[7], _106_[7], _106_[7], _106_[7], _106_[7], _106_[7] };
endmodule
